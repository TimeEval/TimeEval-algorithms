{
    "title": "DenoisingAutoEncoder (DAE)",
    "description": "Implementation of https://dl.acm.org/doi/10.1145/2689746.2689747",
    "inputDimensionality": "multivariate",
    "version": "0.3.0",
    "authors": "Mayu Sakurada, Takehisa Yairi",
    "language": "Python",
    "type": "Detector",
    "learningType": "semi-supervised",
    "mainFile": "algorithm.py",
    "trainingStep": {
      "parameters": [
        {
          "name": "latent_size",
          "type": "int",
          "defaultValue": 32,
          "optional": "true",
          "description": "Dimensionality of latent space"
        },
        {
          "name": "epochs",
          "type": "int",
          "defaultValue":10,
          "optional": "true",
          "description": "Number of training epochs"
        },
        {
          "name": "learning_rate",
          "type": "float",
          "defaultValue": "0.005",
          "optional": "true",
          "description": "Learning rate"
        },
        {
          "name": "noise_ratio",
          "type": "float",
          "defaultValue": 0.1,
          "optional": "true",
          "description": "Percentage of points that are converted to noise (0) during training"
        },
        {
          "name": "split",
          "type": "float",
          "defaultValue": 0.8,
          "optional": "true",
          "description": "Fraction to split training data by for validation"
        },
        {
          "name": "early_stopping_delta",
          "type": "float",
          "defaultValue": 0.5,
          "optional": "true",
          "description": "If loss is `delta` or less smaller for `patience` epochs, stop"
        },
        {
          "name": "early_stopping_patience",
          "type": "int",
          "defaultValue": 10,
          "optional": "true",
          "description": "If loss is `delta` or less smaller for `patience` epochs, stop"
        },
        {
          "name": "random_state",
          "type": "int",
          "defaultValue": 42,
          "optional": "true",
          "description": "Seed for the random number generator"
        }
      ],
      "modelInput": "none"
    },
    "executionStep": {
      "parameters": [
        {
          "name": "random_state",
          "type": "int",
          "defaultValue": 42,
          "optional": "true",
          "description": "Seed for the random number generator"
        }
      ],
      "modelInput": "required"
    }
}
